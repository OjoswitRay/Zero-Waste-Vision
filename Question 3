import cv2
import numpy as np
import matplotlib.pyplot as plt

# 1. Read image in grayscale and invert it
gray_img = cv2.imread('image.jpg', cv2.IMREAD_GRAYSCALE)
inverted_img = 255 - gray_img

plt.figure(figsize=(10, 5))
plt.subplot(1, 2, 1)
plt.title('Original Grayscale')
plt.imshow(gray_img, cmap='gray')
plt.subplot(1, 2, 2)
plt.title('Inverted Image')
plt.imshow(inverted_img, cmap='gray')
plt.show()

# 2. Color image operations (split channels, zero red, merge)
color_img = cv2.imread('image.jpg')
color_img = cv2.cvtColor(color_img, cv2.COLOR_BGR2RGB)  # Convert to RGB

# Split channels
r, g, b = cv2.split(color_img)
# Zero out red channel
r[:] = 0
# Merge channels
no_red_img = cv2.merge([r, g, b])

plt.figure(figsize=(10, 5))
plt.subplot(1, 2, 1)
plt.title('Original Color')
plt.imshow(color_img)
plt.subplot(1, 2, 2)
plt.title('Red Channel Zeroed')
plt.imshow(no_red_img)
plt.show()

# 3. Flipping operations
# Horizontal flip
h_flip = cv2.flip(color_img, 1)
# Vertical flip
v_flip = cv2.flip(color_img, 0)
# Mirror (same as horizontal flip for 2D matrix)
mirror_img = color_img[:, ::-1]

plt.figure(figsize=(15, 5))
plt.subplot(1, 3, 1)
plt.title('Horizontal Flip')
plt.imshow(h_flip)
plt.subplot(1, 3, 2)
plt.title('Vertical Flip')
plt.imshow(v_flip)
plt.subplot(1, 3, 3)
plt.title('Mirror Image')
plt.imshow(mirror_img)
plt.show()

# Verify if mirror equals horizontal flip
print("Is mirror same as horizontal flip?", np.array_equal(h_flip, mirror_img))
